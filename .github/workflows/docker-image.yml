name: Deploy to Droplet
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
env:
  DOCKER_IMAGE_NAME: website
jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: production_environment
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Add host key to known_hosts
        run: ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts
      - name: Build Docker image with metadata
        run: |
          docker build \
            --build-arg VERSION=$(date +%s) \
            --label org.opencontainers.image.revision=${{ github.sha }} \
            -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
      - name: Save Docker image
        run: |
          docker save ${{ env.DOCKER_IMAGE_NAME }}:latest | gzip > ${{ env.DOCKER_IMAGE_NAME }}.tar.gz
      - name: Create deploy folder and transfer image
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.DROPLET_IP }} "mkdir -p ~/deploy"
          scp ${{ env.DOCKER_IMAGE_NAME }}.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.DROPLET_IP }}:~/deploy/
      - name: Run deployment script on server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.DROPLET_IP }} "cd ~/deploy && ~/deploy.sh ${{ github.sha }} ${{ env.DOCKER_IMAGE_NAME }}"
      - name: Clean up local resources
        if: always()
        run: |
          rm -f ${{ env.DOCKER_IMAGE_NAME }}.tar.gz